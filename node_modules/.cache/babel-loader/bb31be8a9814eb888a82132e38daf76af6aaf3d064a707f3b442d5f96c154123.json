{"ast":null,"code":"var _jsxFileName = \"/Users/omyadav/Desktop/CALENDLY/src/components/TimeSlots.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimeSlots({\n  selectedDate,\n  onTimeSelect,\n  bookings\n}) {\n  const timeSlots = ['11:00 AM', '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM'];\n  const isBooked = time => {\n    const bookingKey = `${selectedDate.toDateString()}-${time}`;\n    return bookings[bookingKey];\n  };\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-slots\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Available Time Slots for \", formatDate(selectedDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), timeSlots.map(time => {\n      const booked = isBooked(time);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `time-slot ${booked ? 'booked' : ''}`,\n        onClick: () => !booked && onTimeSelect(time),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), booked && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#999',\n              fontSize: '14px'\n            },\n            children: [\"Booked: \", booked.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = TimeSlots;\nexport default TimeSlots;\nvar _c;\n$RefreshReg$(_c, \"TimeSlots\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TimeSlots","selectedDate","onTimeSelect","bookings","timeSlots","isBooked","time","bookingKey","toDateString","formatDate","date","toLocaleDateString","weekday","year","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","booked","onClick","style","display","justifyContent","alignItems","color","fontSize","message","_c","$RefreshReg$"],"sources":["/Users/omyadav/Desktop/CALENDLY/src/components/TimeSlots.js"],"sourcesContent":["import React from 'react';\n\nfunction TimeSlots({ selectedDate, onTimeSelect, bookings }) {\n  const timeSlots = [\n    '11:00 AM', '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM'\n  ];\n  \n  const isBooked = (time) => {\n    const bookingKey = `${selectedDate.toDateString()}-${time}`;\n    return bookings[bookingKey];\n  };\n  \n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  \n  return (\n    <div className=\"time-slots\">\n      <h2>Available Time Slots for {formatDate(selectedDate)}</h2>\n      \n      {timeSlots.map(time => {\n        const booked = isBooked(time);\n        \n        return (\n          <div\n            key={time}\n            className={`time-slot ${booked ? 'booked' : ''}`}\n            onClick={() => !booked && onTimeSelect(time)}\n          >\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <span>{time}</span>\n              {booked && (\n                <span style={{ color: '#999', fontSize: '14px' }}>\n                  Booked: {booked.message}\n                </span>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default TimeSlots; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAC;EAAEC,YAAY;EAAEC,YAAY;EAAEC;AAAS,CAAC,EAAE;EAC3D,MAAMC,SAAS,GAAG,CAChB,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CACnE;EAED,MAAMC,QAAQ,GAAIC,IAAI,IAAK;IACzB,MAAMC,UAAU,GAAG,GAAGN,YAAY,CAACO,YAAY,CAAC,CAAC,IAAIF,IAAI,EAAE;IAC3D,OAAOH,QAAQ,CAACI,UAAU,CAAC;EAC7B,CAAC;EAED,MAAME,UAAU,GAAIC,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACtCC,OAAO,EAAE,MAAM;MACfC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBlB,OAAA;MAAAkB,QAAA,GAAI,2BAAyB,EAACR,UAAU,CAACR,YAAY,CAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAE3DjB,SAAS,CAACkB,GAAG,CAAChB,IAAI,IAAI;MACrB,MAAMiB,MAAM,GAAGlB,QAAQ,CAACC,IAAI,CAAC;MAE7B,oBACEP,OAAA;QAEEiB,SAAS,EAAE,aAAaO,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QACjDC,OAAO,EAAEA,CAAA,KAAM,CAACD,MAAM,IAAIrB,YAAY,CAACI,IAAI,CAAE;QAAAW,QAAA,eAE7ClB,OAAA;UAAK0B,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,eAAe;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAAX,QAAA,gBACrFlB,OAAA;YAAAkB,QAAA,EAAOX;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAClBE,MAAM,iBACLxB,OAAA;YAAM0B,KAAK,EAAE;cAAEI,KAAK,EAAE,MAAM;cAAEC,QAAQ,EAAE;YAAO,CAAE;YAAAb,QAAA,GAAC,UACxC,EAACM,MAAM,CAACQ,OAAO;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC,GAXDf,IAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYN,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACW,EAAA,GA7CQhC,SAAS;AA+ClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}